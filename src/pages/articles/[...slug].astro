---
import { getCollection, getEntry, render } from 'astro:content';
import ArticleLayout from '@/layouts/ArticleLayout';
import ArticleCard from '@/components/news/ArticleCard'; 

export async function getStaticPaths() {
	const articles = await getCollection('articles');
	return articles.map((article) => ({
		params: { slug: article.data.slug },
		props: article,
	}));
}

const article = await getEntry('articles', Astro.props.id);
const { Content, headings } = await render(article);

// Optionally, fetch related articles or other data here
const relatedArticles = await getCollection('articles', ({ data }) => data.category === article.data.category && data.slug !== article.data.slug);

---

<ArticleLayout
  title={article.data.title}
  description={article.data.description}
  image={article.data.heroImage}
  articleDate={article.data.pubDate}
  headings={headings}>
  <!-- Article Header with Title and Metadata -->
  <header class="mb-8">
    <h1 class="text-4xl font-bold mb-4">{article.data.title}</h1>
    <p class=" dark:text-gray-300 mb-2">{article.data.description}</p>
    <p class="text-sm text-gray-500 dark:text-gray-400">Published on: {new Date(article.data.pubDate).toLocaleDateString()}</p>
    <p class="text-sm text-gray-500 dark:text-gray-400">Category: {article.data.category}</p>
    <div class="flex gap-2 mt-2">
      {article.data.tags.map(tag => (
        <span class="bg-gray-200 text-gray-700 dark:bg-gray-700 dark:text-gray-200 text-xs font-semibold px-2 py-1 rounded">
          {tag}
        </span>
      ))}
    </div>
  </header>

  <!-- Main Content -->
  <article class="prose prose-sm prose-stone text-gray-500 dark:text-gray-100">
    <Content />
  </article>

  <!-- Related Articles Section -->
  <section class="mt-12">
    <h2 class="text-2xl font-semibold mb-4">Related Articles</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {relatedArticles.map((relatedArticle) => (
        <ArticleCard
          id={relatedArticle.id}
          data={relatedArticle.data}
          slug={relatedArticle.data.slug}
        />
      ))}
    </div>
  </section>
</ArticleLayout>
